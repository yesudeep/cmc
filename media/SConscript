#!/usr/bin/env python
# -*- coding: utf-8 -*-

Import('env')

from util import match_patterns, minifiables, filter_files
from fnmatch import fnmatch
from os.path import basename
from filesystem import walk_dir

SRC_DIR = './'
DEST_DIR = '../' + env['MEDIA_DEST_DIR'] + '/'

SCRIPT_FILES = Split("""
    script/lib/chickoojs/src/jquery/jquery-1.3.2.js
    script/lib/chickoojs/src/jquery/jquery-1.4a1.min.js
    script/lib/chickoojs/src/jquery/tools/1.1.2/jquery.tools.min.js
    script/lib/chickoojs/src/jquery/tweet/tweet/jquery.tweet.js
    script/lib/chickoojs/src/jquery/qtip/1.0.0-rc3/jquery.qtip.js
    script/lib/chickoojs/src/jquery/fancybox/1.3.0b/jquery.fancybox.js
    script/what.js
    script/index.js
    script/base.js
    script/start.js
""")

IMAGE_FILES = Split("""
    image/logo/en_US/text.png
    image/logo/favicon.png

    image/heading/im_writing_a_book_about_you.png
    image/heading/who_is_this_chap.png
    image/heading/what_is_cutting_masala_chai.png
    image/heading/why_cutting_masala_chai.png

    image/picture/author.jpg
    image/picture/dance.jpg
    image/picture/tajmahal.jpg
    image/picture/two_friends.jpg
    image/picture/age.jpg
    image/picture/margao.jpg

    image/icon/goldkey.png
    image/icon/license.png
    image/icon/crumpled/128x128/gmail.png
    image/icon/crumpled/128x128/twitter.png
    image/icon/crumpled/128x128/orkut.png
    image/icon/crumpled/128x128/facebook.png
    image/icon/crumpled/128x128/gmail-envelope.png
    image/icon/crumpled/128x128/feed.png
    image/icon/crumpled/128x128/broadcast.png
    image/icon/crumpled/128x128/thumbs-down.png
    image/icon/crumpled/128x128/thumbs-up.png
    image/icon/crumpled/48x48/thumbs_down.png
    image/icon/crumpled/48x48/thumbs_up.png
    image/icon/spinner.gif
    image/icon/book.png
    image/icon/goodies.png
    image/icon/notepad.png
    image/icon/register.png
    image/icon/sign_board.png
    image/icon/author.png
    
    
    image/bg/blockquote.png
    image/bg/button_overlay.png
    image/bg/letter_collage.jpg
    image/bg/people_collage.jpg
    image/bg/sky.jpg
    image/bg/home.jpg
    image/bg/texture.jpg
    image/bg/textfield_normal.png
    image/bg/textfield_readonly.png
    image/bg/do_you_like_title.png
    image/bg/navigation.png

    image/fancybox/fancy_progress.png
""")

CSS_FILES = Split("""
    script/lib/chickoojs/src/jquery/fancybox/1.3.0b/jquery.fancybox.css
    css/screen.css
""")

# Do not include IMAGE files in here.
# Please include them in IMAGE_FILES above.
# If you would like images to be copied "as is" without
# any optimizations, then you may include them here.
PLAIN_COPIES = SCRIPT_FILES + CSS_FILES + Split("""
    robots.txt
    html/facebook/xd_receiver.html
""")

PLAIN_COPY_DIRECTORIES = Split("""

""")

# Recursively add all the files in the directories to files to copy.
for directory in set(PLAIN_COPY_DIRECTORIES):
    files = [f[len(SRC_DIR):] for f in walk_dir(SRC_DIR + directory)]
    PLAIN_COPIES.extend(files)

# Plain copies.
for f in set(PLAIN_COPIES):
    env.Command(DEST_DIR + f, SRC_DIR + f, Copy("$TARGET", "$SOURCE"))

# Optimize graphics
for f in IMAGE_FILES:
    filename = str(f)
    if match_patterns(filename, patterns=['*.png']):
        env.OptimizePNG(DEST_DIR + f, SRC_DIR + f)
    elif match_patterns(filename, patterns=['*.jpg', '*.jpeg']):
        env.OptimizeJPEG(DEST_DIR + f, SRC_DIR + f)
    else:
        env.Command(DEST_DIR + f, SRC_DIR + f, Copy("$TARGET", "$SOURCE"))


# Stitching graphics together

stitched_images = [
    dict(
        target='image/icon/crumpled/128x128/icon-set.png',
        sources=Split("""
        image/icon/crumpled/128x128/twitter-box.png
        image/icon/crumpled/128x128/orkut.png
        image/icon/crumpled/128x128/facebook-box.png
        image/icon/crumpled/128x128/gmail-envelope.png
        image/icon/crumpled/128x128/feed.png
        image/icon/crumpled/128x128/broadcast.png
        image/icon/crumpled/128x128/thumbs-up.png
        image/icon/crumpled/128x128/thumbs-down.png
        """),
        orientation='horizontal',
        ),
    dict(
        target='image/fancybox/fancybox.png',
        sources=Split("""
        script/lib/chickoojs/src/jquery/fancybox/1.3.0b/fancy_closebox.png
        script/lib/chickoojs/src/jquery/fancybox/1.3.0b/fancy_title_left.png
        script/lib/chickoojs/src/jquery/fancybox/1.3.0b/fancy_title_main.png
        script/lib/chickoojs/src/jquery/fancybox/1.3.0b/fancy_title_right.png
        script/lib/chickoojs/src/jquery/fancybox/1.3.0b/fancybox_left.png
        script/lib/chickoojs/src/jquery/fancybox/1.3.0b/fancybox_right.png
        """),
        orientation='vertical',
        ),
]

for stitch in stitched_images:
    func = env.HStitchImages if stitch.get('orientation', 'horizontal') == 'horizontal' else env.VStitchImages
    func(DEST_DIR + stitch['target'], [SRC_DIR + f for f in stitch['sources']])

# Minification of the generated CSS and JS files.
MINIFIABLE_FILES = SCRIPT_FILES + CSS_FILES + Split("""

""")

# Exclude these files specifically from minification.
NON_MINIFIABLE_FILES = Split("""

""")


# Don't minify all files in one command.  Minify them separately.
# It keeps build times small.
for f in minifiables(MINIFIABLE_FILES, NON_MINIFIABLE_FILES):
    filepath = DEST_DIR + str(f)
    env.YuiCompressorMinify(filepath)
    #if fnmatch(basename(filepath), '*.js'):
    #    env.JsminMinify(filepath)

# Combine these JavaScript files and create a common js.
#
# Warning:  THE ORDER MATTERS.
#

page_index_js = env.Concatenate([DEST_DIR + 'script/page/index.js'], [SRC_DIR + f for f in Split("""
    script/lib/chickoojs/src/jquery/tweet/tweet/jquery.tweet.js
    script/index.js
""")])
env.YuiCompressorMinify(page_index_js)


#    script/lib/chickoojs/src/jquery/fancybox/1.2.6/jquery.fancybox-1.2.6.js
page_base_js = env.Concatenate([DEST_DIR + 'script/page/base.js'], [SRC_DIR + f for f in Split("""
    script/lib/chickoojs/src/jquery/fancybox/1.3.0b/jquery.fancybox.js
    script/base.js
    """)])
env.YuiCompressorMinify(page_base_js)
#env.JsminMinify(page_base_js)

page_what_js = env.Concatenate([DEST_DIR + 'script/page/what.js'], [SRC_DIR + f for f in Split("""
    script/what.js
""")])
env.YuiCompressorMinify(page_what_js)

env.YuiCompressorMinify(env.Concatenate([DEST_DIR + 'script/page/start.js'], [SRC_DIR + f for f in Split("""
    script/start.js
""")]))

env.YuiCompressorMinify(env.Concatenate([DEST_DIR + 'css/screen-all.css'], [SRC_DIR + f for f in Split("""
    css/screen.css
    css/fancybox.css
""")]))
